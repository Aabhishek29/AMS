schema{
    query: Query
}

type Query{
    allUsers(userId:String) : [Users]
    userDetails(appId: String, sessionListId: String, deactivateUser: String) : [UserDetails]
    sessionList : [SessionList]
}


type Users {
    userName : String!,
    userId: String!,
    name:String!,
    email : String!,
    password : String!,
    phone : String,
    organizationEmail : String,
    createdAt : String,
    updatedAt: String,
    profileUrl : String,
    authenticated: String
    userDetails : [UserDetails]
}

type UserDetails {
    sessionListId : String!,
    createdAt : String!,
    updatedAt : String!,
    appId : String!,
    status : String,
    profileUrl : String,
    deactivateUser : String,
    listSessions : [SessionList]
}

type SessionList {
    id : ID,
    sessionId : String!,
    sessionDetails : SessionDetails
}

type ChatParticipants {
    pid : ID,
    participant : String,
    sessionDetails : SessionDetails
}

type SessionDetails {
    chatMessageId : String,
    createdAt : String,
    updatedAt : String,
    chatType : String,
    groupProfileUrl : String,
    connectionType : String,
    sessionList : SessionDetails
    chatMessagesId : [ChatMessages]
}

type ChatMessages {
    messageId : ID,
    message : String,
    mimeType : String,
    createdAt : String,
    sender : String,
    emotion : String,
    SessionDetails : SessionDetails
}